library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
Colors()
colors()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
?Devices
q()
swirl()
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head()
head(PM2.5)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col ="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
head(low)
low()
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=4, col="magenta")
names(pollution)
table(region)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main=""Number of Counties
barplot(reg, col="wheat", main=""Number of Counties in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region="east")
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
abline(hline=12)
abline(h=12)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
q()
library(swirl)
swirl()
?devices
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file==myplot.pdf")
swirl()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file=="geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
bye()
q()
swirl()
library(swirl())
swirl()
str(mpg)
qplot(disply, hwy, mpg)
qplot(disply, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth")
)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv.~, binwidth=2)
qplot(hwy, data=mpg, facets=drv . ~, binwidth=2)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
q()
library(swirl)
swirl()
qplot(displ, hwy, and data=mpg, geom=c( "point", "smooth"), facets=.~drv,method=loess)
qplot(displ, hwy, data=mpg, geom=c( "point", "smooth"), facets=.~drv,method=loess)
qplot(displ, hwy, data=mpg, geom=c( "point", "smooth"), facets=.~drv, method=loess)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method=loess)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
?qplot
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method=loess())
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="lm")
qplotReal <- qplot # Copies the function
fun
fun()
info()
qplot(displ, hwy, data = mpg, geom="smooth",facets=.~drv)
skip()
qplotReal <- qplot # Copies the function
qplot <- function(...,method="deprecated"){
qplotReal(...)
}
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplotreal(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplotReal(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
info()
bye
qplotReal <- qplot # Copies the function
bye()
qplotReal <- qplot # Copies the function
qplot <- function(...,method="deprecated"){
qplot <- function(...,method="deprecated")
qplot <- function(...,method="deprecated"){
qplotReal(...)
}
swirl()
qplotReal(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
bye
bye()
qplotReal <- qplot # Copies the function
qplot <- function(...,method="deprecated"){
qplotReal(...)
}
siwrl()
swirl()
qplotReal(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle="Swirl Rules"
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(aes=drv, size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage")))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!"), labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv), labs(title="Swirl Rules!"), labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, lty=3, metho="lm", se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year))
)
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black"
)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="displacement", y="Highway Mileage, title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="displacement", y="Highway Mileage, title="Swirl Rules!"
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="displacement", y="Highway Mileage", title="Swirl Rules!"
)
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")g + geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="HighwayMileage",title="Swirl Rules!")
eg + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!") at the command prompt.
eg + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!") at the command prompt.
eg + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage", title="Swirl Rules!")
rm(qplot)
library(ggplot)
library(ggplot())
library(ggplot2)
q()
library(swirl())
swirl()
swirl()
swirl()
swirl()
delete_progress("Toby")
swirl()
dist(dataframe)
dist(dataFrame)
hc <- hclus(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col"blue")
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min())
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean())
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(distTmp2,2,which.min)
points(x,y,och=19, cex=2,col=cols1[newClus2])
points(x,y,pch=19, cex=2,col=cols1[newClus2])
points(x,y,pch=19, cex=2,col=cols1[newClus2])
points(x,y,pch=19, cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,pch=9, cex=2,col=cols1, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
q()
setwd("C:/Users/toby.kraft/Dropbox/coursera/reproducible-research")
